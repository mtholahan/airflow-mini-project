x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
  environment: &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__WEBSERVER__SECRET_KEY: something-secret
    AIRFLOW__API__AUTH_BACKENDS: ${AIRFLOW__API__AUTH_BACKENDS:-airflow.api.auth.backend.session}
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./requirements-docker.txt:/requirements.txt
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow webserver"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow scheduler"

  airflow-triggerer:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow triggerer"

  airflow-dag-processor:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow dag-processor"

  airflow-worker:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow celery worker"

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow db migrate && airflow users create --username airflow --password airflow --firstname Admin --lastname User --role Admin --email markholahan@proton.me"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres-db-volume:
